# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.9
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(940, 611)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("app-icon-512x.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(10, 10, 911, 541))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.plainTextEdit.sizePolicy().hasHeightForWidth())
        self.plainTextEdit.setSizePolicy(sizePolicy)
        self.plainTextEdit.setObjectName("plainTextEdit")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 940, 22))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuProject = QtWidgets.QMenu(self.menubar)
        self.menuProject.setObjectName("menuProject")
        self.menuDebug = QtWidgets.QMenu(self.menubar)
        self.menuDebug.setObjectName("menuDebug")
        self.menuHtlp = QtWidgets.QMenu(self.menubar)
        self.menuHtlp.setObjectName("menuHtlp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCut = QtWidgets.QAction(MainWindow)
        self.actionCut.setObjectName("actionCut")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        self.actionPaste.setObjectName("actionPaste")
        self.actionEmoji_Symbols = QtWidgets.QAction(MainWindow)
        self.actionEmoji_Symbols.setObjectName("actionEmoji_Symbols")
        self.actionMinimize = QtWidgets.QAction(MainWindow)
        self.actionMinimize.setObjectName("actionMinimize")
        self.actionMaximize = QtWidgets.QAction(MainWindow)
        self.actionMaximize.setObjectName("actionMaximize")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionCompile = QtWidgets.QAction(MainWindow)
        self.actionCompile.setObjectName("actionCompile")
        self.actionRun = QtWidgets.QAction(MainWindow)
        self.actionRun.setObjectName("actionRun")
        self.actionFlash_to_Boot = QtWidgets.QAction(MainWindow)
        self.actionFlash_to_Boot.setObjectName("actionFlash_to_Boot")
        self.actionRun_2 = QtWidgets.QAction(MainWindow)
        self.actionRun_2.setObjectName("actionRun_2")
        self.actionDebug = QtWidgets.QAction(MainWindow)
        self.actionDebug.setObjectName("actionDebug")
        self.actionRelease = QtWidgets.QAction(MainWindow)
        self.actionRelease.setObjectName("actionRelease")
        self.actionTest_Breakpoints = QtWidgets.QAction(MainWindow)
        self.actionTest_Breakpoints.setObjectName("actionTest_Breakpoints")
        self.actionRun_UI_Tests = QtWidgets.QAction(MainWindow)
        self.actionRun_UI_Tests.setObjectName("actionRun_UI_Tests")
        self.actionCheck_for_Updates = QtWidgets.QAction(MainWindow)
        self.actionCheck_for_Updates.setObjectName("actionCheck_for_Updates")
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionEmoji_Symbols)
        self.menuView.addAction(self.actionMinimize)
        self.menuView.addAction(self.actionMaximize)
        self.menuView.addAction(self.actionClose)
        self.menuProject.addAction(self.actionCompile)
        self.menuProject.addAction(self.actionRun)
        self.menuProject.addAction(self.actionFlash_to_Boot)
        self.menuDebug.addAction(self.actionRun_2)
        self.menuDebug.addAction(self.actionDebug)
        self.menuDebug.addAction(self.actionRelease)
        self.menuDebug.addAction(self.actionTest_Breakpoints)
        self.menuDebug.addAction(self.actionRun_UI_Tests)
        self.menuHtlp.addAction(self.actionAbout)
        self.menuHtlp.addAction(self.actionCheck_for_Updates)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuProject.menuAction())
        self.menubar.addAction(self.menuDebug.menuAction())
        self.menubar.addAction(self.menuHtlp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Octodollop"))
        self.plainTextEdit.setPlaceholderText(_translate("MainWindow", "Type some text here."))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuProject.setTitle(_translate("MainWindow", "Project"))
        self.menuDebug.setTitle(_translate("MainWindow", "Debug"))
        self.menuHtlp.setTitle(_translate("MainWindow", "Help"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCopy.setText(_translate("MainWindow", "Copy"))
        self.actionPaste.setText(_translate("MainWindow", "Paste"))
        self.actionEmoji_Symbols.setText(_translate("MainWindow", "Emoji & Symbols"))
        self.actionMinimize.setText(_translate("MainWindow", "Minimize"))
        self.actionMaximize.setText(_translate("MainWindow", "Maximize"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionCompile.setText(_translate("MainWindow", "Compile"))
        self.actionRun.setText(_translate("MainWindow", "Run"))
        self.actionFlash_to_Boot.setText(_translate("MainWindow", "Flash to Boot"))
        self.actionRun_2.setText(_translate("MainWindow", "Run"))
        self.actionDebug.setText(_translate("MainWindow", "Debug..."))
        self.actionRelease.setText(_translate("MainWindow", "Release"))
        self.actionTest_Breakpoints.setText(_translate("MainWindow", "Test Breakpoints"))
        self.actionRun_UI_Tests.setText(_translate("MainWindow", "Run UI Tests"))
        self.actionCheck_for_Updates.setText(_translate("MainWindow", "Check for Updates"))
